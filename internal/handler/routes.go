// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	address "oa_final/internal/handler/address"
	refresh "oa_final/internal/handler/refresh"
	shoppingcart "oa_final/internal/handler/shoppingcart"
	userorder "oa_final/internal/handler/userorder"
	"oa_final/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/neworder",
				Handler: userorder.NeworderHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/userorder"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/getsc",
				Handler: shoppingcart.GetscHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/updatesc",
				Handler: shoppingcart.UpdatescHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/shoppingcart"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/updateaddress",
				Handler: address.UpdateaddressHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/getaddress",
				Handler: address.GetaddressHandler(serverCtx),
			},
		},
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
		rest.WithPrefix("/address"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/refreshPL",
				Handler: refresh.RefreshPLHandler(serverCtx),
			},
		},
		rest.WithPrefix("/refresh"),
	)
}
